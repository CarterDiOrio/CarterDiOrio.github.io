{"version":3,"file":"f8a5a1a267a96457f73b059b60c08d625d96fd5f-3e4087f8b61574963dad.js","mappings":"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","sources":["webpack://portfolio/./node_modules/@theme-ui/components/dist/theme-ui-components.esm.js","webpack://portfolio/./src/components/layout.tsx"],"sourcesContent":["import { useTheme } from '@emotion/react';\nimport React, { forwardRef } from 'react';\nimport { css, get } from '@theme-ui/css';\nimport { jsx, jsxs } from '@theme-ui/core/jsx-runtime';\n\nconst boxSystemProps = [\n// space scale props (inherited from @styled-system/space)\n'margin', 'marginTop', 'marginRight', 'marginBottom', 'marginLeft', 'marginX', 'marginY', 'm', 'mt', 'mr', 'mb', 'ml', 'mx', 'my', 'padding', 'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft', 'paddingX', 'paddingY', 'p', 'pt', 'pr', 'pb', 'pl', 'px', 'py',\n// color props (inherited from @styled-system/color)\n'color', 'backgroundColor', 'bg', 'opacity'];\n/**\n * @internal\n */\nconst __isBoxStyledSystemProp = prop => boxSystemProps.includes(prop);\nconst pickSystemProps = props => {\n  const res = {};\n  for (const key of boxSystemProps) {\n    res[key] = props[key];\n  }\n  return res;\n};\n\n/**\n * Use the Box component as a layout primitive to add margin, padding, and colors to content.\n * @see https://theme-ui.com/components/box\n */\nconst Box$1 = /*#__PURE__*/forwardRef(function Box(props, ref) {\n  const theme = useTheme();\n  const {\n    __themeKey = 'variants',\n    __css,\n    variant,\n    css: cssProp,\n    sx,\n    as: Component = 'div',\n    ...rest\n  } = props;\n  const baseStyles = {\n    boxSizing: 'border-box',\n    margin: 0,\n    minWidth: 0\n  };\n  const __cssStyles = css(__css)(theme);\n  const variantInTheme = get(theme, `${__themeKey}.${variant}`) || get(theme, variant);\n  const variantStyles = variantInTheme && css(variantInTheme)(theme);\n  const sxPropStyles = css(sx)(theme);\n  const systemPropsStyles = css(pickSystemProps(rest))(theme);\n  const style = [baseStyles, __cssStyles, variantStyles, sxPropStyles, systemPropsStyles, cssProp];\n  boxSystemProps.forEach(name => {\n    delete rest[name];\n  });\n  return jsx(Component, {\n    ref: ref,\n    css: style,\n    ...rest\n  });\n});\n\n/**\n * Use the Flex component to create flexbox layouts.\n * @see https://theme-ui.com/components/flex\n */\nconst Flex = /*#__PURE__*/React.forwardRef(function Flex(props, ref) {\n  return jsx(Box$1, {\n    ref: ref,\n    ...props,\n    sx: {\n      display: 'flex',\n      ...props.sx\n    }\n  });\n});\n\nconst getProps = test => props => {\n  const next = {};\n  for (const key in props) {\n    if (test(key || '')) next[key] = props[key];\n  }\n  return next;\n};\nconst MRE = /^m[trblxy]?$/;\nconst getMargin = getProps(k => MRE.test(k));\nconst omitMargin = getProps(k => !MRE.test(k));\n\n/** @internal */\nfunction __internalProps(props) {\n  return props;\n}\n\n/**\n * @internal Props used by Theme UI Components not intended for user code.\n */\n\nconst px = n => typeof n === 'number' ? n + 'px' : n;\nconst singleWidthToColumns = (width, repeat) => width ? `repeat(auto-${repeat}, minmax(${px(width)}, 1fr))` : null;\nconst widthToColumns = (width, repeat) => Array.isArray(width) ? width.map(w => singleWidthToColumns(w, repeat)) : singleWidthToColumns(width, repeat);\nconst singleCountToColumns = n => n ? typeof n === 'number' ? `repeat(${n}, 1fr)` : n : null;\nconst countToColumns = n => Array.isArray(n) ? n.map(singleCountToColumns) : singleCountToColumns(n);\n/**\n * CSS grid layout component to arrange direct child elements in a tiled grid layout.\n * @see https://theme-ui.com/components/grid\n */\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid({\n  width,\n  columns,\n  gap = 3,\n  repeat = 'fit',\n  ...props\n}, ref) {\n  const gridTemplateColumns = !!width ? widthToColumns(width, repeat) : countToColumns(columns);\n  const __css = {\n    display: 'grid',\n    gridGap: gap,\n    gridTemplateColumns\n  };\n  return jsx(Box$1, {\n    ref: ref,\n    ...props,\n    ...__internalProps({\n      __themeKey: 'grids',\n      __css\n    })\n  });\n});\n\nconst Box = Box$1;\n/**\n * Primitive button component with variants\n * @see https://theme-ui.com/components/button\n */\nconst Button = /*#__PURE__*/React.forwardRef(function Button(props, ref) {\n  return jsx(Box, {\n    ref: ref,\n    as: \"button\",\n    variant: \"primary\",\n    ...props,\n    ...__internalProps({\n      __themeKey: 'buttons',\n      __css: {\n        appearance: 'none',\n        display: props.hidden ? undefined : 'inline-block',\n        textAlign: 'center',\n        lineHeight: 'inherit',\n        textDecoration: 'none',\n        fontSize: 'inherit',\n        px: 3,\n        py: 2,\n        color: 'white',\n        bg: 'primary',\n        border: 0,\n        borderRadius: 4\n      }\n    })\n  });\n});\n\n/**\n * Link variants can be defined in the `theme.links` object.\n * By default the Link component will use styles defined in `theme.styles.a`.\n * @see https://theme-ui.com/components/link\n */\nconst Link = /*#__PURE__*/React.forwardRef(function Link(props, ref) {\n  return jsx(Box$1, {\n    ref: ref,\n    as: \"a\",\n    variant: \"styles.a\",\n    ...props,\n    ...__internalProps({\n      __themeKey: 'links'\n    })\n  });\n});\n\n/**\n * Primitive typographic component.\n *\n * Text style variants can be defined in the theme.text object.\n * The Paragraph component uses theme.text.paragraph as its default variant style.\n * @see https://theme-ui.com/components/paragraph\n */\nconst Paragraph = /*#__PURE__*/React.forwardRef(function Paragraph(props, ref) {\n  return jsx(Box$1, {\n    ref: ref,\n    as: \"p\",\n    variant: \"paragraph\",\n    ...props,\n    ...__internalProps({\n      __themeKey: 'text',\n      __css: {\n        fontFamily: 'body',\n        fontWeight: 'body',\n        lineHeight: 'body'\n      }\n    })\n  });\n});\n\n/**\n * Primitive typographic component.\n *\n * Text style variants can be defined in the theme.text object.\n * @see https://theme-ui.com/components/text\n */\nconst Text = /*#__PURE__*/React.forwardRef(function Text(props, ref) {\n  return jsx(Box$1, {\n    as: \"span\",\n    ref: ref,\n    variant: \"default\",\n    ...props,\n    ...__internalProps({\n      __themeKey: 'text'\n    })\n  });\n});\n\n/**\n * Primitive heading component, defaults to <h2>.\n *\n * Text style variants can be defined in the theme.text object.\n * The Heading component uses theme.text.heading as its default variant style.\n * @see https://theme-ui.com/components/heading\n */\nconst Heading = /*#__PURE__*/React.forwardRef(function Heading(props, ref) {\n  return jsx(Box$1, {\n    ref: ref,\n    as: \"h2\",\n    variant: \"heading\",\n    ...props,\n    ...__internalProps({\n      __themeKey: 'text',\n      __css: {\n        fontFamily: 'heading',\n        fontWeight: 'heading',\n        lineHeight: 'heading'\n      }\n    })\n  });\n});\n\n/**\n * Image style variants can be defined in the theme.images object.\n * @see https://theme-ui.com/components/image/\n */\nconst Image = /*#__PURE__*/React.forwardRef(function Image(props, ref) {\n  const __outerCss = props.__css;\n  return jsx(Box$1, {\n    ref: ref,\n    as: \"img\",\n    ...props,\n    ...__internalProps({\n      __themeKey: 'images',\n      __css: {\n        maxWidth: '100%',\n        height: 'auto',\n        ...__outerCss\n      }\n    })\n  });\n});\n\n/**\n * Card style variants can be defined in the `theme.cards` object.\n * By default the Card component uses the `theme.cards.primary` variant.\n * @see https://theme-ui.com/components/card\n */\nconst Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  return jsx(Box$1, {\n    ref: ref,\n    variant: \"primary\",\n    ...props,\n    ...__internalProps({\n      __themeKey: 'cards'\n    })\n  });\n});\n\n/**\n * Label variants can be defined in `theme.forms`\n * and the component uses the `theme.forms.label` variant by default.\n * @see https://theme-ui.com/components/label/\n */\nconst Label = /*#__PURE__*/React.forwardRef(function Label(props, ref) {\n  return jsx(Box$1, {\n    ref: ref,\n    as: \"label\",\n    variant: \"label\",\n    ...props,\n    ...__internalProps({\n      __themeKey: 'forms',\n      __css: {\n        width: '100%',\n        display: 'flex'\n      }\n    })\n  });\n});\n\nconst autofillStyles = {\n  boxShadow: 'inset 0 0 0 1000px var(--theme-ui-input-autofill-bg)',\n  fontSize: 'inherit',\n  ':first-line': {\n    fontSize: '1rem'\n  }\n};\nconst defaultInputStyles = {\n  display: 'block',\n  width: '100%',\n  p: 2,\n  appearance: 'none',\n  fontSize: 'inherit',\n  lineHeight: 'inherit',\n  border: '1px solid',\n  borderRadius: 4,\n  color: 'inherit',\n  bg: 'transparent',\n  ':autofill, :autofill:hover, :autofill:focus': autofillStyles,\n  ':-webkit-autofill, :-webkit-autofill:hover, :-webkit-autofill:focus': autofillStyles\n};\n/**\n * Input variants can be defined in `theme.forms`\n * and the component uses the `theme.forms.input` variant by default.\n * @see https://theme-ui.com/components/input/\n */\nconst Input = /*#__PURE__*/React.forwardRef(function Input({\n  sx,\n  autofillBackgroundColor = 'background',\n  ...rest\n}, ref) {\n  return jsx(Box$1, {\n    ref: ref,\n    as: \"input\",\n    variant: \"input\",\n    sx: {\n      '--theme-ui-input-autofill-bg': theme => theme.colors && get(theme.colors, autofillBackgroundColor, null),\n      ...sx\n    },\n    ...rest,\n    ...__internalProps({\n      __themeKey: 'forms',\n      __css: defaultInputStyles\n    })\n  });\n});\n\nconst SVG = /*#__PURE__*/React.forwardRef(function SVG({\n  size = 24,\n  ...rest\n}, ref) {\n  const svgProps = {\n    xmlns: 'http://www.w3.org/2000/svg',\n    width: size,\n    height: size,\n    viewBox: '0 0 24 24',\n    fill: 'currentcolor',\n    ...rest\n  };\n  return jsx(Box$1, {\n    ref: ref,\n    as: \"svg\",\n    ...svgProps\n  });\n});\nSVG.displayName = 'SVG';\n\nconst DownArrow = props => jsx(SVG, {\n  ...props,\n  children: jsx(\"path\", {\n    d: \"M7 10l5 5 5-5z\"\n  })\n});\n/**\n * Select variants can be defined in `theme.forms`\n * and the component uses the `theme.forms.select` variant by default.\n * @see https://theme-ui.com/components/select/\n */\nconst Select = /*#__PURE__*/React.forwardRef(function Select({\n  arrow,\n  ...props\n}, ref) {\n  const __css = {\n    display: 'block',\n    width: '100%',\n    p: 2,\n    paddingRight: 4,\n    appearance: 'none',\n    fontSize: 'inherit',\n    lineHeight: 'inherit',\n    border: '1px solid',\n    borderRadius: 4,\n    color: 'inherit',\n    backgroundColor: theme => get(theme, 'colors.background', null)\n  };\n  return jsxs(Box$1, {\n    ...getMargin(props),\n    sx: {\n      display: 'flex'\n    },\n    children: [jsx(Box$1, {\n      ref: ref,\n      as: \"select\",\n      variant: \"select\",\n      ...omitMargin(props),\n      ...__internalProps({\n        __themeKey: 'forms',\n        __css\n      })\n    }), arrow || jsx(DownArrow, {\n      sx: {\n        ml: -28,\n        alignSelf: 'center',\n        pointerEvents: 'none'\n      }\n    })]\n  });\n});\n\n/**\n * Form textarea component\n *\n * Textarea variants can be defined in `theme.forms`\n * and the component uses the `theme.forms.textarea` variant by default.\n * @see https://theme-ui.com/components/textarea/\n */\nconst Textarea = /*#__PURE__*/React.forwardRef(function Textarea(props, ref) {\n  return jsx(Box$1, {\n    ref: ref,\n    as: \"textarea\",\n    variant: \"textarea\",\n    ...props,\n    ...__internalProps({\n      __themeKey: 'forms',\n      __css: {\n        display: 'block',\n        width: '100%',\n        p: 2,\n        appearance: 'none',\n        fontSize: 'inherit',\n        lineHeight: 'inherit',\n        border: '1px solid',\n        borderRadius: 4,\n        color: 'inherit',\n        bg: 'transparent'\n      }\n    })\n  });\n});\n\nconst RadioChecked = props => jsx(SVG, {\n  ...props,\n  children: jsx(\"path\", {\n    d: \"M12 7c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5zm0-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n  })\n});\nconst RadioUnchecked = props => jsx(SVG, {\n  ...props,\n  children: jsx(\"path\", {\n    d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n  })\n});\nconst RadioIcon = props => jsxs(React.Fragment, {\n  children: [jsx(RadioChecked, {\n    ...props,\n    ...__internalProps({\n      __css: {\n        display: 'none',\n        'input:checked ~ &': {\n          display: 'block'\n        }\n      }\n    })\n  }), jsx(RadioUnchecked, {\n    ...props,\n    ...__internalProps({\n      __css: {\n        display: 'block',\n        'input:checked ~ &': {\n          display: 'none'\n        }\n      }\n    })\n  })]\n});\n/**\n * Form radio input component\n *\n * Radio variants can be defined in `theme.forms` and the\n * component uses the `theme.forms.radio variant` by default.\n * @see https://theme-ui.com/components/radio/\n */\nconst Radio = /*#__PURE__*/React.forwardRef(function Radio({\n  className,\n  sx,\n  variant = 'radio',\n  ...props\n}, ref) {\n  return jsxs(Box$1, {\n    sx: {\n      minWidth: 'min-content'\n    },\n    children: [jsx(Box$1, {\n      ref: ref,\n      as: \"input\",\n      type: \"radio\",\n      ...props,\n      sx: {\n        position: 'absolute',\n        opacity: 0,\n        zIndex: -1,\n        width: 1,\n        height: 1,\n        overflow: 'hidden'\n      }\n    }), jsx(Box$1, {\n      as: RadioIcon,\n      \"aria-hidden\": \"true\",\n      variant: variant,\n      className: className,\n      sx: sx,\n      ...__internalProps({\n        __themeKey: 'forms',\n        __css: {\n          mr: 2,\n          borderRadius: 9999,\n          color: 'gray',\n          flexShrink: 0,\n          'input:checked ~ &': {\n            color: 'primary'\n          },\n          'input:focus ~ &': {\n            bg: 'highlight'\n          }\n        }\n      })\n    })]\n  });\n});\n\nconst CheckboxChecked = props => jsx(SVG, {\n  ...props,\n  children: jsx(\"path\", {\n    d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n  })\n});\nconst CheckboxUnchecked = props => jsx(SVG, {\n  ...props,\n  children: jsx(\"path\", {\n    d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n  })\n});\nconst CheckboxIcon = props => jsxs(React.Fragment, {\n  children: [jsx(CheckboxChecked, {\n    ...props,\n    ...__internalProps({\n      __css: {\n        display: 'none',\n        'input:checked ~ &': {\n          display: 'block'\n        }\n      }\n    })\n  }), jsx(CheckboxUnchecked, {\n    ...props,\n    ...__internalProps({\n      __css: {\n        display: 'block',\n        'input:checked ~ &': {\n          display: 'none'\n        }\n      }\n    })\n  })]\n});\n/**\n * Form checkbox input component\n *\n * Checkbox variants can be defined in `theme.forms` and the\n * component uses the `theme.forms.checkbox` variant by default.\n * @see https://theme-ui.com/components/checkbox/\n */\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox({\n  className,\n  sx,\n  variant = 'checkbox',\n  children,\n  ...props\n}, ref) {\n  return jsxs(Box$1, {\n    sx: {\n      minWidth: 'min-content'\n    },\n    children: [jsx(Box$1, {\n      ref: ref,\n      as: \"input\",\n      type: \"checkbox\",\n      ...props,\n      sx: {\n        position: 'absolute',\n        opacity: 0,\n        zIndex: -1,\n        width: 1,\n        height: 1,\n        overflow: 'hidden'\n      }\n    }), jsx(Box$1, {\n      as: CheckboxIcon,\n      \"aria-hidden\": \"true\",\n      variant: variant,\n      className: className,\n      sx: sx,\n      ...__internalProps({\n        __themeKey: 'forms',\n        __css: {\n          mr: 2,\n          borderRadius: 4,\n          color: 'gray',\n          flexShrink: 0,\n          'input:checked ~ &': {\n            color: 'primary'\n          },\n          'input:focus ~ &': {\n            color: 'primary',\n            bg: 'highlight'\n          }\n        }\n      })\n    }), children]\n  });\n});\n\nconst GUTTER = 2;\nconst SIZE = 18;\n/**\n * Form switch component\n *\n * Switch variants can be defined in `theme.forms`\n * and the component uses the `theme.forms.switch` variant by default.\n */\nconst Switch = /*#__PURE__*/React.forwardRef(function Switch({\n  className,\n  label,\n  sx,\n  variant = 'switch',\n  ...rest\n}, ref) {\n  const __css = {\n    position: 'relative',\n    flexShrink: 0,\n    bg: 'gray',\n    borderRadius: SIZE,\n    height: SIZE + GUTTER * 2,\n    width: SIZE * 2 + GUTTER * 2,\n    mr: 2,\n    'input:disabled ~ &': {\n      opacity: 0.5,\n      cursor: 'not-allowed'\n    },\n    '& > div': {\n      display: 'flex',\n      alignItems: 'center',\n      borderRadius: '50%',\n      height: SIZE,\n      width: SIZE,\n      bg: 'white',\n      boxShadow: '0 1px 2px rgba(0, 0, 0, 0.1)',\n      position: 'relative',\n      transform: 'translateX(0%)',\n      transition: `transform 240ms cubic-bezier(0.165, 0.840, 0.440, 1.000)`\n    },\n    'input:checked ~ &': {\n      bg: 'primary',\n      '> div': {\n        transform: 'translateX(100%)'\n      }\n    }\n  };\n  return jsxs(Label, {\n    sx: {\n      cursor: 'pointer'\n    },\n    children: [jsx(Box$1, {\n      ref: ref,\n      as: \"input\",\n      type: \"checkbox\",\n      \"aria-label\": label,\n      ...rest,\n      sx: {\n        position: 'absolute',\n        opacity: 0,\n        zIndex: -1,\n        width: 1,\n        height: 1,\n        overflow: 'hidden'\n      },\n      ...__internalProps({\n        __themeKey: 'forms'\n      })\n    }), jsx(Box$1, {\n      css: {\n        padding: GUTTER\n      },\n      variant: variant,\n      className: className,\n      sx: sx,\n      ...__internalProps({\n        __themeKey: 'forms',\n        __css\n      }),\n      children: jsx(Box$1, {})\n    }), jsx(\"span\", {\n      children: label\n    })]\n  });\n});\n\nconst thumbStyle = {\n  appearance: 'none',\n  width: 16,\n  height: 16,\n  bg: 'currentcolor',\n  border: 0,\n  borderRadius: 9999,\n  variant: 'forms.slider.thumb'\n};\nconst sliderStyle = {\n  display: 'block',\n  width: '100%',\n  height: 4,\n  my: 2,\n  cursor: 'pointer',\n  appearance: 'none',\n  borderRadius: 9999,\n  color: 'inherit',\n  bg: 'gray',\n  ':focus': {\n    outline: 'none',\n    color: 'primary'\n  },\n  '&::-webkit-slider-thumb': thumbStyle,\n  '&::-moz-range-thumb': thumbStyle,\n  '&::-ms-thumb': thumbStyle\n};\n/**\n * Range input element\n *\n * Slider variants can be defined in the `theme.forms` object.\n * The Slider component uses `theme.forms.slider` as its default variant style.\n * @see https://theme-ui.com/components/slider/\n */\nconst Slider = /*#__PURE__*/React.forwardRef(function Slider(props, ref) {\n  return jsx(Box$1, {\n    ref: ref,\n    as: \"input\",\n    type: \"range\",\n    variant: \"slider\",\n    ...props,\n    ...__internalProps({\n      __themeKey: 'forms',\n      __css: sliderStyle\n    })\n  });\n});\n\nconst Field = /*#__PURE__*/React.forwardRef(function Field({\n  // if somebody specifies the generic parameter without passing `as` prop, they get Input anyway\n  as: Control = Input,\n  label,\n  id,\n  name,\n  ...rest\n}, ref) {\n  const fieldIdentifier = id || name;\n  const controlProps = {\n    ref,\n    name,\n    id: fieldIdentifier,\n    ...omitMargin(rest)\n  };\n  return jsxs(Box$1, {\n    ...getMargin(rest),\n    children: [jsx(Label, {\n      htmlFor: fieldIdentifier,\n      children: label\n    }), jsx(Control, {\n      ...controlProps\n    })]\n  });\n}); // Field is generic bcs of `as` prop, so we can't just use types from forwardRef\n\n/**\n * Horizontal `<progress />` bar\n * @see https://theme-ui.com/components/progress/\n */\nconst Progress = /*#__PURE__*/React.forwardRef(function Progress(props, ref) {\n  const __css = {\n    display: 'block',\n    width: '100%',\n    height: '4px',\n    margin: 0,\n    padding: 0,\n    overflow: 'hidden',\n    appearance: 'none',\n    color: 'primary',\n    bg: 'gray',\n    borderRadius: 9999,\n    border: 'none',\n    '&::-webkit-progress-bar': {\n      bg: 'transparent'\n    },\n    '&::-webkit-progress-value': {\n      bg: 'currentcolor'\n    },\n    '&::-moz-progress-bar': {\n      bg: 'currentcolor'\n    }\n  };\n  return jsx(Box$1, {\n    ref: ref,\n    as: \"progress\",\n    variant: \"styles.progress\",\n    ...props,\n    ...__internalProps({\n      __css\n    })\n  });\n});\n\n/**\n * Single value SVG donut chart\n * @see https://theme-ui.com/components/donut/\n */\nconst Donut = /*#__PURE__*/React.forwardRef(function Donut({\n  size = 128,\n  strokeWidth = 2,\n  value = 0,\n  min = 0,\n  max = 1,\n  title,\n  ...props\n}, ref) {\n  const r = 16 - (typeof strokeWidth === 'number' ? strokeWidth : parseFloat(strokeWidth));\n  const C = 2 * r * Math.PI;\n  const offset = C - (value - min) / (max - min) * C;\n  const svgProps = {\n    strokeWidth,\n    viewBox: '0 0 32 32',\n    width: size,\n    height: size,\n    fill: 'none',\n    stroke: 'currentcolor'\n  };\n  return jsxs(Box$1, {\n    ref: ref,\n    as: \"svg\",\n    role: \"img\",\n    \"aria-valuenow\": value,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    ...svgProps,\n    ...props,\n    ...__internalProps({\n      __css: {\n        color: 'primary'\n      }\n    }),\n    children: [title && jsx(\"title\", {\n      children: title\n    }), jsx(\"circle\", {\n      cx: 16,\n      cy: 16,\n      r: r,\n      opacity: 1 / 8\n    }), jsx(\"circle\", {\n      cx: 16,\n      cy: 16,\n      r: r,\n      strokeDasharray: C,\n      strokeDashoffset: offset,\n      transform: \"rotate(-90 16 16)\"\n    })]\n  });\n});\n\nconst Spinner = /*#__PURE__*/React.forwardRef(function Spinner({\n  size = 48,\n  strokeWidth = 4,\n  max = 1,\n  title = 'Loading',\n  duration = 750,\n  ...props\n}, ref) {\n  const __css = {\n    color: 'primary',\n    overflow: 'visible'\n  };\n  const svgProps = {\n    strokeWidth,\n    viewBox: '0 0 32 32',\n    width: size,\n    height: size,\n    fill: 'none',\n    stroke: 'currentColor',\n    role: 'img'\n  };\n  const circleProps = {\n    strokeWidth,\n    r: 16 - strokeWidth,\n    cx: 16,\n    cy: 16,\n    fill: 'none'\n  };\n  return jsxs(Box$1, {\n    ref: ref,\n    as: \"svg\",\n    ...svgProps,\n    ...props,\n    ...__internalProps({\n      __css\n    }),\n    children: [jsx(\"title\", {\n      children: title\n    }), jsx(\"circle\", {\n      ...circleProps,\n      opacity: 1 / 8\n    }), jsx(\"circle\", {\n      ...circleProps,\n      strokeDasharray: \"20 110\",\n      children: jsx(\"animateTransform\", {\n        attributeName: \"transform\",\n        attributeType: \"XML\",\n        type: \"rotate\",\n        from: \"0 16 16\",\n        to: \"360 16 16\",\n        dur: `${duration}ms`,\n        repeatCount: \"indefinite\"\n      })\n    })]\n  });\n});\n\nconst Avatar = /*#__PURE__*/React.forwardRef(function Avatar({\n  size = 48,\n  ...props\n}, ref) {\n  return jsx(Image, {\n    ref: ref,\n    width: size,\n    height: size,\n    variant: \"avatar\",\n    ...props,\n    ...__internalProps({\n      __css: {\n        borderRadius: 9999\n      }\n    })\n  });\n});\n\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(props, ref) {\n  return jsx(Box$1, {\n    ref: ref,\n    variant: \"primary\",\n    ...props,\n    ...__internalProps({\n      __themeKey: 'badges',\n      __css: {\n        display: 'inline-block',\n        verticalAlign: 'baseline',\n        fontSize: 0,\n        fontWeight: 'bold',\n        whiteSpace: 'nowrap',\n        px: 1,\n        borderRadius: 2,\n        color: 'white',\n        bg: 'primary'\n      }\n    })\n  });\n});\n\n/**\n * Transparent button for SVG icons\n *\n * IconButton variants can be defined in the `theme.buttons` object.\n * By default the IconButton component will use styles defined in `theme.buttons.icon`.\n *\n * @see https://theme-ui.com/components/icon-button\n */\nconst IconButton = /*#__PURE__*/React.forwardRef(function IconButton({\n  size = 32,\n  ...props\n}, ref) {\n  var _css;\n  const emotionCssLabel = ((_css = props.__css) == null ? void 0 : _css.label) || 'IconButton';\n  return jsx(Box$1, {\n    ref: ref,\n    as: \"button\",\n    variant: \"icon\",\n    ...props,\n    ...__internalProps({\n      __themeKey: 'buttons',\n      __css: {\n        label: emotionCssLabel,\n        appearance: 'none',\n        display: 'inline-flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: 1,\n        width: size,\n        height: size,\n        color: 'inherit',\n        bg: 'transparent',\n        border: 'none',\n        borderRadius: 4\n      }\n    })\n  });\n});\n\nconst CloseIcon = jsx(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"24\",\n  height: \"24\",\n  fill: \"currentColor\",\n  viewBox: \"0 0 24 24\",\n  children: jsx(\"path\", {\n    d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n  })\n});\n/**\n * Button with close (×) icon.\n *\n * The Close component renders as a <button> element by default.\n * Pass any button attributes as props to the component.\n *\n * Close component variants can be defined in the theme.buttons object.\n * The Close component uses theme.buttons.close as its default variant style.\n */\nconst Close = /*#__PURE__*/React.forwardRef(function Close({\n  size = 32,\n  ...props\n}, ref) {\n  return jsx(IconButton, {\n    ref: ref,\n    size: size,\n    title: \"Close\",\n    \"aria-label\": \"Close\",\n    variant: \"close\",\n    ...props,\n    children: CloseIcon\n  });\n});\n\n/**\n * Component for displaying messages, notifications, or other application state.\n *\n * Alert variants can be defined in `theme.alerts`.\n * The Alert component uses `theme.alerts.primary` as its default variant.\n */\nconst Alert = /*#__PURE__*/React.forwardRef(function Alert(props, ref) {\n  return jsx(Box$1, {\n    ref: ref,\n    variant: \"primary\",\n    ...props,\n    ...__internalProps({\n      __themeKey: 'alerts',\n      __css: {\n        display: 'flex',\n        alignItems: 'center',\n        px: 3,\n        py: 2,\n        fontWeight: 'bold',\n        color: 'white',\n        bg: 'primary',\n        borderRadius: 4\n      }\n    })\n  });\n});\n\n/**\n * The Divider component reuses styles from `theme.styles.hr` as its default variant.\n */\nconst Divider = /*#__PURE__*/React.forwardRef(function Divider(props, ref) {\n  return jsx(Box$1, {\n    ref: ref,\n    as: \"hr\",\n    variant: \"styles.hr\",\n    ...props,\n    ...__internalProps({\n      __css: {\n        color: 'gray',\n        m: 0,\n        my: 2,\n        border: 0,\n        borderBottom: '1px solid'\n      }\n    })\n  });\n});\n\nconst getContainerProps = getProps(__isBoxStyledSystemProp);\nconst getIframeProps = getProps(str => !__isBoxStyledSystemProp(str));\n/**\n * Responsive iframe for video embeds.\n *\n * Embed variants can be defined anywhere in the theme object.\n *\n * @see https://theme-ui.com/components/embed\n */\nconst Embed = /*#__PURE__*/React.forwardRef(function Embed({\n  variant,\n  sx,\n  ratio = 16 / 9,\n  src,\n  frameBorder = 0,\n  allowFullScreen = true,\n  width = 560,\n  height = 315,\n  allow,\n  ...rest\n}, ref) {\n  const iframeProps = {\n    src,\n    width,\n    height,\n    frameBorder,\n    allowFullScreen,\n    allow,\n    ...getIframeProps(rest)\n  };\n  return jsx(Box$1, {\n    variant: variant,\n    sx: sx,\n    ...getContainerProps(rest),\n    ...__internalProps({\n      __css: {\n        width: '100%',\n        height: 0,\n        paddingBottom: 100 / ratio + '%',\n        position: 'relative',\n        overflow: 'hidden'\n      }\n    }),\n    children: jsx(Box$1, {\n      ref: ref,\n      as: \"iframe\",\n      ...iframeProps,\n      ...__internalProps({\n        __css: {\n          position: 'absolute',\n          width: '100%',\n          height: '100%',\n          top: 0,\n          bottom: 0,\n          left: 0,\n          border: 0\n        }\n      })\n    })\n  });\n});\n\n/**\n * Component for maintaining a fluid-width aspect ratio\n * @see https://theme-ui.com/components/aspect-ratio\n */\nconst AspectRatio = /*#__PURE__*/React.forwardRef(function AspectRatio({\n  ratio = 4 / 3,\n  children,\n  ...props\n}, ref) {\n  return jsxs(Box$1, {\n    ref: ref,\n    sx: {\n      position: 'relative',\n      overflow: 'hidden'\n    },\n    children: [jsx(Box$1, {\n      sx: {\n        width: '100%',\n        height: 0,\n        paddingBottom: 100 / ratio + '%'\n      }\n    }), jsx(Box$1, {\n      ...props,\n      ...__internalProps({\n        __css: {\n          position: 'absolute',\n          top: 0,\n          right: 0,\n          bottom: 0,\n          left: 0\n        }\n      }),\n      children: children\n    })]\n  });\n});\n\n/**\n * Image component constrained by as aspect ratio.\n * @see https://theme-ui.com/components/aspect-image\n */\nconst AspectImage = /*#__PURE__*/React.forwardRef(function AspectImage({\n  ratio,\n  ...props\n}, ref) {\n  return jsx(AspectRatio, {\n    ratio: ratio,\n    children: jsx(Image, {\n      ref: ref,\n      ...props,\n      ...__internalProps({\n        __css: {\n          objectFit: 'cover'\n        }\n      })\n    })\n  });\n});\n\n/**\n * Centered, max-width layout component\n *\n * Container variants can be defined in the `theme.layout` object.\n * The Container component uses `theme.layout.container` as its default variant style.\n * @see https://theme-ui.com/components/container\n */\nconst Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  return jsx(Box$1, {\n    ref: ref,\n    variant: \"container\",\n    ...props,\n    ...__internalProps({\n      __themeKey: 'layout',\n      __css: {\n        width: '100%',\n        maxWidth: 'container',\n        mx: 'auto'\n      }\n    })\n  });\n});\n\n/**\n * Link component for use in navigation\n *\n * NavLink variants can be defined in the `theme.links` object.\n * By default the NavLink component will use styles defined in `theme.links.nav`.\n * @see https://theme-ui.com/components/nav-link\n */\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLink(props, ref) {\n  const __css = {\n    color: 'inherit',\n    textDecoration: 'none',\n    fontWeight: 'bold',\n    display: 'inline-block',\n    '&:hover, &:focus, &.active': {\n      color: 'primary'\n    }\n  };\n  return jsx(Link, {\n    ref: ref,\n    variant: \"nav\",\n    ...props,\n    ...__internalProps({\n      __css\n    })\n  });\n});\n\n/**\n * Styled Box component for callouts and inline messages\n *\n * Message variants can be defined in the theme.messages object.\n * @see https://theme-ui.com/components/message\n */\nconst Message = /*#__PURE__*/React.forwardRef(function Message(props, ref) {\n  const __css = {\n    padding: 3,\n    paddingLeft: t => t.space && Number(t.space[3]) - Number(t.space[1]),\n    borderLeftWidth: t => t.space && Number(t.space[1]),\n    borderLeftStyle: 'solid',\n    borderLeftColor: 'primary',\n    borderRadius: 4,\n    bg: 'highlight'\n  };\n  return jsx(Box$1, {\n    ref: ref,\n    ...props,\n    ...__internalProps({\n      __themeKey: 'messages',\n      __css\n    })\n  });\n});\n\nconst MenuIcon = ({\n  size = 24\n}) => {\n  return jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    width: size,\n    height: size,\n    fill: \"currentColor\",\n    css: {\n      display: 'block',\n      margin: 0,\n      boxSizing: 'border-box',\n      minWidth: 0\n    },\n    children: jsx(\"path\", {\n      d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n    })\n  });\n};\n/**\n * MenuButton variants can be defined in the `theme.buttons` object.\n * By default the MenuButton component will use styles defined in `theme.buttons.menu`.\n *\n * @see https://theme-ui.com/components/menu-button\n */\nconst MenuButton = /*#__PURE__*/React.forwardRef(function MenuButton(props, ref) {\n  return jsx(IconButton, {\n    ref: ref,\n    title: \"Menu\",\n    \"aria-label\": \"Toggle Menu\",\n    variant: \"menu\",\n    ...props,\n    children: jsx(MenuIcon, {})\n  });\n});\n\nexport { Alert, AspectImage, AspectRatio, Avatar, Badge, Box$1 as Box, Button, Card, Checkbox, Close, CloseIcon, Container, Divider, Donut, Embed, Field, Flex, Grid, Heading, IconButton, Image, Input, Label, Link, MenuButton, MenuIcon, Message, NavLink, Paragraph, Progress, Radio, Select, Slider, Spinner, Switch, Text, Textarea, __isBoxStyledSystemProp };\n","/** @jsxImportSource theme-ui */\n\nimport { Link } from \"gatsby\";\nimport * as React from \"react\";\nimport {\n    Button,\n    Container,\n    Divider,\n    Flex,\n    Heading,\n    NavLink,\n    Text,\n} from \"theme-ui\";\n\ninterface LayoutProps {\n    children: React.ReactNode;\n}\n\nexport const Layout: React.FC<LayoutProps> = ({ children }) => {\n    return (\n        <div>\n            <link\n                rel=\"stylesheet\"\n                href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"\n            ></link>\n            <header\n                sx={{\n                    background: \"sheet\",\n                }}\n            >\n                <Container\n                    sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        flexWrap: \"wrap\",\n                        gap: \"4px\",\n                        paddingTop: \"8px\",\n                        justifyContent: \"space-between\",\n                    }}\n                >\n                    <div>\n                        <Heading\n                            sx={{\n                                color: \"snow\",\n                            }}\n                            variant=\"webtitle\"\n                        >\n                            Carter DiOrio\n                        </Heading>\n\n                        <NavLink\n                            href=\"https://www.mccormick.northwestern.edu/robotics/\"\n                            sx={{\n                                display: \"flex\",\n                                alignItems: \"center\",\n                                justifyContent: \"left\",\n                            }}\n                        >\n                            <Text\n                                sx={{\n                                    color: \"muted\",\n                                    fontSize: \"12px\",\n                                    fontWeight: \"bold\",\n                                    \":hover,:focus\": {\n                                        color: \"purple\",\n                                    },\n                                }}\n                            >\n                                MSR Student @ Northwestern\n                            </Text>\n                        </NavLink>\n                    </div>\n\n                    <Flex\n                        as=\"nav\"\n                        sx={{\n                            gap: \"16px\",\n                        }}\n                    >\n                        <NavLink p={2} href=\"/projects\" variant=\"navbar\">\n                            Projects\n                        </NavLink>\n                        <NavLink p={2} href=\"/about\" variant=\"navbar\">\n                            About\n                        </NavLink>\n                        <NavLink\n                            href=\"https://www.linkedin.com/in/carter-diorio-b445041bb/\"\n                            sx={{\n                                paddingLeft: \"4px\",\n                                \":hover,:focus\": {\n                                    color: \"blue\",\n                                },\n                            }}\n                            variant=\"navbar\"\n                        >\n                            <i\n                                className=\"fa fa-linkedin-square\"\n                                style={{\n                                    fontSize: \"20px\",\n                                }}\n                            ></i>\n                        </NavLink>\n                        <NavLink\n                            href=\"https://github.com/CarterDiOrio\"\n                            sx={{\n                                paddingLeft: \"4px\",\n                                \":hover,:focus\": {\n                                    color: \"#6e5494\",\n                                },\n                            }}\n                            variant=\"navbar\"\n                        >\n                            <i\n                                className=\"fa fa-github-square\"\n                                style={{\n                                    fontSize: \"20px\",\n                                }}\n                            ></i>\n                        </NavLink>\n                    </Flex>\n                </Container>\n            </header>\n            \n            {/**\n             * Container for main webpage content\n             */}\n            <Container\n                sx={{\n                    paddingTop: (theme) => `${theme.space[4]}px`,\n                }}\n            >\n                {children}\n            </Container>\n        </div>\n    );\n};\n\nexport default Layout;\n"],"names":["boxSystemProps","__isBoxStyledSystemProp","prop","includes","Box$1","forwardRef","props","ref","theme","u","__themeKey","__css","variant","css","cssProp","sx","as","Component","rest","__cssStyles","variantInTheme","variantStyles","sxPropStyles","systemPropsStyles","res","key","pickSystemProps","style","boxSizing","margin","minWidth","forEach","name","Flex","display","getProps","test","next","MRE","k","Link","Text","Heading","fontFamily","fontWeight","lineHeight","Image","__outerCss","maxWidth","height","Card","SVG","size","svgProps","xmlns","width","viewBox","fill","displayName","Badge","verticalAlign","fontSize","whiteSpace","px","borderRadius","color","bg","Divider","children","d","m","my","border","borderBottom","Container","str","mx","NavLink","textDecoration","Layout","_ref","_jsxs","_jsx","rel","href","background","flexDirection","flexWrap","gap","paddingTop","justifyContent","alignItems","p","paddingLeft","className","space"],"sourceRoot":""}